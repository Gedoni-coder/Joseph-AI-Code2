# Generated by Django 5.2.6 on 2025-09-11 16:56

import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AdvisoryInsight',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('type', models.CharField(choices=[('recommendation', 'Recommendation'), ('alert', 'Alert'), ('opportunity', 'Opportunity'), ('risk', 'Risk')], max_length=15)),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('priority', models.CharField(choices=[('high', 'High'), ('medium', 'Medium'), ('low', 'Low')], max_length=10)),
                ('category', models.CharField(choices=[('investment', 'Investment'), ('cost_optimization', 'Cost Optimization'), ('revenue_growth', 'Revenue Growth'), ('risk_management', 'Risk Management')], max_length=20)),
                ('estimated_impact', models.FloatField()),
                ('timeframe', models.CharField(max_length=50)),
                ('confidence', models.IntegerField()),
                ('action_items', models.JSONField()),
                ('related_metrics', models.JSONField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('status', models.CharField(choices=[('new', 'New'), ('reviewed', 'Reviewed'), ('implemented', 'Implemented'), ('dismissed', 'Dismissed')], max_length=15)),
            ],
        ),
        migrations.CreateModel(
            name='BudgetAssumption',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('category', models.CharField(max_length=100)),
                ('assumption', models.CharField(max_length=200)),
                ('value', models.FloatField()),
                ('unit', models.CharField(max_length=20)),
                ('confidence', models.IntegerField()),
                ('source', models.CharField(max_length=200)),
                ('impact', models.CharField(choices=[('high', 'High'), ('medium', 'Medium'), ('low', 'Low')], max_length=10)),
                ('last_validated', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='BudgetForecast',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('period', models.CharField(max_length=50)),
                ('type', models.CharField(choices=[('weekly', 'Weekly'), ('monthly', 'Monthly'), ('quarterly', 'Quarterly')], max_length=10)),
                ('revenue', models.FloatField()),
                ('expenses', models.FloatField()),
                ('net_income', models.FloatField()),
                ('confidence', models.IntegerField()),
                ('assumptions', models.JSONField()),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('variance', models.FloatField()),
                ('actual_revenue', models.FloatField(blank=True, null=True)),
                ('actual_expenses', models.FloatField(blank=True, null=True)),
                ('actual_net_income', models.FloatField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='CashFlowProjection',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('date', models.DateField()),
                ('opening_balance', models.FloatField()),
                ('operating_cash', models.FloatField()),
                ('accounts_receivable', models.FloatField()),
                ('other_income', models.FloatField()),
                ('operating_expenses', models.FloatField()),
                ('accounts_payable', models.FloatField()),
                ('capital_expenditure', models.FloatField()),
                ('debt_service', models.FloatField()),
                ('net_cash_flow', models.FloatField()),
                ('closing_balance', models.FloatField()),
                ('liquidity_ratio', models.FloatField()),
                ('days_of_cash', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='LiquidityMetric',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('metric', models.CharField(max_length=100)),
                ('current', models.FloatField()),
                ('target', models.FloatField()),
                ('status', models.CharField(choices=[('healthy', 'Healthy'), ('warning', 'Warning'), ('critical', 'Critical')], max_length=10)),
                ('trend', models.CharField(choices=[('improving', 'Improving'), ('stable', 'Stable'), ('declining', 'Declining')], max_length=15)),
            ],
        ),
        migrations.CreateModel(
            name='PerformanceDriver',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=200)),
                ('category', models.CharField(choices=[('revenue', 'Revenue'), ('cost', 'Cost'), ('efficiency', 'Efficiency'), ('growth', 'Growth')], max_length=15)),
                ('current_value', models.FloatField()),
                ('target_value', models.FloatField()),
                ('unit', models.CharField(max_length=20)),
                ('trend', models.CharField(choices=[('improving', 'Improving'), ('stable', 'Stable'), ('declining', 'Declining')], max_length=15)),
                ('impact', models.CharField(choices=[('high', 'High'), ('medium', 'Medium'), ('low', 'Low')], max_length=10)),
                ('linked_budget_items', models.JSONField()),
                ('kpi_history', models.JSONField()),
            ],
        ),
        migrations.CreateModel(
            name='RiskAssessment',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('category', models.CharField(choices=[('liquidity', 'Liquidity'), ('credit', 'Credit'), ('market', 'Market'), ('operational', 'Operational'), ('regulatory', 'Regulatory')], max_length=15)),
                ('risk_name', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('probability', models.IntegerField()),
                ('impact', models.IntegerField()),
                ('risk_score', models.IntegerField()),
                ('current_mitigation', models.JSONField()),
                ('recommended_actions', models.JSONField()),
                ('status', models.CharField(choices=[('identified', 'Identified'), ('monitoring', 'Monitoring'), ('mitigating', 'Mitigating'), ('resolved', 'Resolved')], max_length=15)),
                ('last_reviewed', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='ScenarioTest',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('type', models.CharField(choices=[('stress', 'Stress'), ('sensitivity', 'Sensitivity'), ('monte_carlo', 'Monte Carlo')], max_length=15)),
                ('parameters', models.JSONField()),
                ('revenue', models.FloatField()),
                ('expenses', models.FloatField()),
                ('net_income', models.FloatField()),
                ('cash_flow', models.FloatField()),
                ('impact_severity', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High'), ('critical', 'Critical')], max_length=10)),
                ('probability', models.IntegerField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
    ]
